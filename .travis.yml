dist: xenial
language: shell
jobs:
  include:

  - stage: dev
    env:
      GCP_PROJECT: semi-marketplace-dev
    script:
    - "set -e"
    - "./login_gcp.sh sa-keyfile-dev.json"
    - "./push_images.sh"
    - "./download_weaviate_chart.sh"
    - "./build_values_yaml.sh"
    - "./build_deployer.sh"
    - "./journey_test.sh"
    - "./delete_all_clusters.sh"

  - stage: public
    env:
      GCP_PROJECT: semi-marketplace-public
    script:
    - "set -e"
    - "./login_gcp.sh sa-keyfile-public.json"
    - "./push_images.sh"
    - "./download_weaviate_chart.sh"
    - "./build_values_yaml.sh"
    - "./build_deployer.sh"

cache:
  directories:
  - "$HOME/google-cloud-sdk/"
  - docker_images


before_install:
- gcloud version || true
- if [ ! -d "$HOME/google-cloud-sdk/bin" ]; then rm -rf $HOME/google-cloud-sdk; export
  CLOUDSDK_CORE_DISABLE_PROMPTS=1; curl https://sdk.cloud.google.com | bash; fi
- source /home/travis/google-cloud-sdk/path.bash.inc
- gcloud version
- gcloud components install kubectl --quiet
- openssl aes-256-cbc -K $encrypted_7d2533dde7d2_key -iv $encrypted_7d2533dde7d2_iv
  -in secrets.tar.enc -out secrets.tar -d
- tar -xf secrets.tar
- docker load -i docker_images/images.tar || true

after_failure:
- "./delete_all_clusters.sh"

before_cache:
- docker save -o docker_images/images.tar $(docker images -a -q)
